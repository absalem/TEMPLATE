//COLORS
// Layout colors (take naming ideas from http://chir.ag/projects/name-that-color/)
$color-white: rgba(255,255,255,1);
$color-black: rgba(0,0,0,1);

$color-text: $color-black;
$default-background-color: $color-white;


/*$color-pink: rgba(232,46,137,1);
$color-thunderbird: rgb(204, 44, 29); // Henkel Rot
$color-scarlet: rgb(255, 30, 26); // Signal Red
$color-text: $color-white; //rgba(204,204,204,1);

// Product colors
$color-velvet-black: $color-black;
$color-navy-blue: rgba(14,23,68,1); //#0E1744
$color-jeans-blue: rgba(30,55,98,1); //#1E3762
$color-antiqoe-grey: rgba(98,101,106,1); //#62656A
$color-dark-brown: rgba(47,23,21,1); //#2F1715
$color-dark-green: rgba(9,59,38,1); //#093B26
$color-intense-violet: rgba(106,48,121,1); //#6A3079
$color-tulip-red: rgba(217,18,65,1); //#D91241
$color-bahama-blue: rgba(0,179,209,1); //#00B3D1
$color-flamingo-pink: rgba(223,20,145,1); //#DF1491*/



//FONTS
$font-family-default: "PT Sans", sans-serif !default;
$font-size-default: 1em;
$line-height-default: normal;

//LINKS
$link-color-default: #000;

// WIDTH
//$overall-width: 1080px;

// SPACING
//$spacing: 25px;


//MEDIA QUERIES
//extra small devices is default - MOBIL FIRST
// small devices
// Breakpoints (For em calculation use http://pxtoem.com/)
$tablet-width: 768px;
$desktop-width: 992px;
$desktop-large-width: 1200px;

.clearfix:after {
    content: ".";
    clear: both;
    display: block;
    visibility: hidden;
    height: 0px;
}

// ************************** EASING **************************************************************

/** Easings, grabbed from https://css-tricks.com/snippets/sass/easing-map-get-function/
 *
 * Example function call:
    .example {
        animation: there-and-back 2.5s ease(in-quad) infinite alternate;
    }
**/
$ease: (
    in-quad:      cubic-bezier(0.55,  0.085, 0.680, 0.530),
    in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190),
    in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220),
    in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060),
    in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715),
    in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035),
    in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335),
    in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045),
    out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940),
    out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000),
    out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000),
    out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000),
    out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000),
    out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000),
    out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000),
    out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275),
    in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955),
    in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000),
    in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000),
    in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000),
    in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950),
    in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000),
    in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860),
    in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550)
);
@function ease($key) {
    @if map-has-key($ease, $key) {
            @return map-get($ease, $key);
    }
    @warn "Unkown '#{$key}' in $ease.";
    @return null;
}

// ************************** MIXINS: CLEARFIX **************************************************************

@mixin cf {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

/*
Usage:
.whatever {
     @include cf();
}
*/

// ************************** MIXINS: RESPONSIVE **************************************************************

@mixin tablet {
    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
        @content;
    }
}

@mixin desktop {
    @media (min-width: #{$desktop-width}) and (max-width: #{$desktop-large-width - 1px}) {
        @content;
    }
}

@mixin desktop-large {
    @media (min-width: #{$desktop-large-width}) {
        @content;
    }
}

/*
Usage:
.whatever {
     @include tablet{
        float: left;
     }
}
*/

// ************************** MIXINS: TRANSFORM **************************************************************

// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// rotate
@mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
    @include transform(scale($scale));
}

// translate
@mixin translate($x, $y) {
    @include transform(translate($x, $y));
}

// skew
@mixin skew($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}

//transform origin
@mixin transform-origin($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}

/*
Usage:
.whatever {
    @include skew(25,10);
    @include transform-origin(top left);
}
*/

// ************************** MIXINS: BOX SHADOW **************************************************************

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $color;
        -moz-box-shadow: inset $top $left $blur $color;
        box-shadow: inset $top $left $blur $color;
    }
    @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}